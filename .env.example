# ?? =======================================================================
# ** Install VS Code ext `aaron-bond.better-comments` for better experience.
# ** -----------------------------------------------------------------------
# Since the ".env" file is gitignored, you can use the ".env.example" file 
# to build a new ".env" file when you clone the repo. Keep this file
# up-to-date when you add new variables to `.env`.
# ** -----------------------------------------------------------------------
# This file will be committed to version control, so make sure not to have
# any secrets in it. If you are cloning this repo, create a copy of this
# file named ".env" and populate it with your secrets.
# ** -----------------------------------------------------------------------
# When adding additional environment variables, the schema in "/src/env.mjs"
# should be updated accordingly.
# ?? =======================================================================

# !! [DB] DRIZZLE: PLANETSCALE (https://planetscale.com)

# 1) Get the Database data from the "prisma" dropdown selector in PlanetScale.
# 2) Change the query params at the end of the URL to "?ssl={"rejectUnauthorized":true}"

# ?? [4] mysql://<...>?ssl={"rejectUnauthorized":true}
DATABASE_URL=""

# !! CLERK CREDENTIALS (https://clerk.com)

# pk_test, and sk_test are development keys
# These values should be replaced with production keys on the deployed site
# For production, use pk_live, and sk_live keys (a domain is required)

# ?? [6] pk_test_****
NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=""

# ?? [7] sk_test_****
CLERK_SECRET_KEY=""

# !! RELIVATOR CREDENTIALS (https://relivator.bleverse.com)

# Use the production URL when deploying to production, e.g. https://example.com
# ?? [8] For dev env: http://localhost:3000
NEXT_PUBLIC_APP_URL="http://localhost:3000"

# !! FILE UPLOADING (https://uploadthing.com)

# ?? [10] sk_live_****
UPLOADTHING_SECRET=""

# ?? [11] ****
UPLOADTHING_APP_ID=""

# !! STRIPE CREDENTIALS (https://stripe.com)

# These values should be replaced with production keys on the deployed site to accept real payments

# ?? [12] pk_test_****
# Stripe Publishable Key and Secret Key found at https://dashboard.stripe.com/test/apikeys
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=""

# ?? [13] sk_test_****
STRIPE_API_KEY=""

# ?? [14] whsec_****
# Stripe Webhook Secret found at https://dashboard.stripe.com/test/webhooks/create?endpoint_location=local
STRIPE_WEBHOOK_SECRET=""

# ?? [15] Store Item | price_****
# Stripe Product and Price IDs for your created products 
# found at https://dashboard.stripe.com/test/products
STRIPE_STD_MONTHLY_PRICE_ID=""

# ?? [16] Subscription | price_****
# Stripe Product and Price IDs for your created products 
# found at https://dashboard.stripe.com/test/products
STRIPE_PRO_MONTHLY_PRICE_ID=""

# !! STRIPE WEBHOOK SECRET (https://stripe.com)

# Create a webhook inside the stripe dashboard. Make sure to listen to the `payment_intent.succeeded` event.
# The webhook URL should be: https://<INSERT_YOUR_DOMAIN_HERE>/api/stripe/webhook

# ?? [17] whsec_****
STRIPE_WEBHOOK_SECRET=""

# !! RESEND (REACT EMAIL BUILDER)

# Resend API Key found at https://resend.com/api-keys

# ?? [18] re_****
RESEND_API_KEY=""
# We need to register a domain with Resend to send emails from
# Register a domain at https://resend.com/domains
# Or we can use this email provided by resend for only testing: "onboarding@resend.dev"
# It is not recommended tho

# ?? [19] mail@example.com
EMAIL_FROM_ADDRESS=""

# !! LOGLIB (https://loglib.io)
# ?? ***_***
LOGLIB_SITE_ID=""
# ?? site_***
LOGLIB_API_KEY=""

# !! UNSORTED ENV VARS

# ?? [20]
POSTMARK_SIGN_IN_TEMPLATE=""

# ?? [21]
POSTMARK_API_TOKEN=""

# ?? [22]
CLOUDFLARE_API=""

# ?? [23]
CLOUDFLARE_USER=""

# ?? [24]
SMTP_FROM=""

# ?? [26]
DISCORD_CLIENT_ID=""

# ?? [27]
DISCORD_CLIENT_SECRET=""

# ?? [28]
GITHUB_ID=""

# ?? [29]
GITHUB_SECRET=""

# ?? [30]
GITHUB_CLIENT_ID=""

# ?? [31]
GITHUB_CLIENT_SECRET=""

# ?? [32]
GITHUB_ACCESS_TOKEN=""

# ?? [33]
GOOGLE_CLIENT_ID=""

# ?? [34]
GOOGLE_CLIENT_SECRET=""
