// !! DEPRECATED !!

import type { Locale } from "~/../reliverse.i18n";

import { notFound } from "next/navigation";

import { locales } from "~/../reliverse.i18n";
import { getRequestConfig } from "next-intl/server";

export default getRequestConfig(async ({ locale }) => {
  if (!locales.includes(locale as any)) {
    notFound();
  }

  return {
    messages: (
      await (locale === ("en" as Locale)
        ? import("../messages/default/en-US.json")
        : import(`../messages/default/${locale}.json`))
    ).default,
  };
});

// TODO: fix Next.js 15 Error: Route "/[locale]" used `headers().get('X-NEXT-INTL-LOCALE')`. `headers()` should be awaited before using its value. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
/* import type { Locale } from "~/../reliverse.i18n";
import { notFound } from "next/navigation";
import { locales } from "~/../reliverse.i18n";
import { getRequestConfig } from "next-intl/server";

// import { headers } from "next/headers";
export default getRequestConfig(async () => {
  if (!locales.includes(locale as any)) {
    notFound();
  }

  // Get headers asynchronously
  const headerList = await headers();
  // Fetch the locale from the headers or fallback to a default locale
  const localeHeader = headerList.get("X-NEXT-INTL-LOCALE") as Locale;
  // Validate the locale or throw a 404 if not valid
  const locale = locales.includes(localeHeader) ? localeHeader : "en"; // Default to 'en' if not valid

  // Return the correct messages based on the locale
  return {
    messages: (
      // await (locale === "en"
      await (locale === ("en" as Locale)
        ? import("../messages/default/en-US.json")
        : import(`../messages/default/${locale}.json`))
    ).default,
  };
});
 */
